import pytest
from book_system import Room


# Test creating a room
def test_create_room(room, sdk):
    created_room = sdk.create(room)
    assert created_room.id is not None
    sdk.delete(created_room)


# Test fetching a room
def test_fetch_room(created_room, sdk):
    fetched_room = sdk.get(model=Room)
    assert int(fetched_room.id) == int(created_room.id)


# Test updating a room
def test_update_room(created_room, sdk):
    created_room.name = "Updated Room"
    updated_room = sdk.refresh(created_room)
    assert updated_room.name == "Updated Room"


# Test deleting a room
def test_delete_room(created_room, sdk):
    sdk.delete(created_room)
    deleted_room = sdk.get(model=Room)
    assert not deleted_room

# Test listing all rooms
def test_list_rooms(created_room, sdk):
    # Create multiple rooms
    room1 = Room(name="Room 1")
    room2 = Room(name="Room 2")

    room1 = sdk.create(room1)
    room2 = sdk.create(room2)

    # List all rooms
    rooms = sdk.rooms
    assert len(rooms) >= 3  # At least the rooms we created
    sdk.delete(room1)
    sdk.delete(room2)


# Test creating a room with autogenerated seats
def test_create_room_with_autogenerated_seats(sdk):
    room = Room(name="Autogenerated Room", autogenerate_seats=True, columns=6, rows=6)
    created_room = sdk.create(room)
    assert created_room.id
    assert len(created_room.seats) == 36  # 6x6 grid, 36 seats
    sdk.delete(created_room)